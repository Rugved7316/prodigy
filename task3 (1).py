# -*- coding: utf-8 -*-
"""task3

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1GUSuARGGkcVI7Y5XrhbXuXabVuxlg3Nt
"""

!pip install pandas matplotlib seaborn scikit-learn graphviz

import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
from sklearn.tree import DecisionTreeClassifier, plot_tree
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import LabelEncoder
from sklearn.metrics import classification_report, confusion_matrix, accuracy_score

url = "/content/sample_data/bank.csv"
df = pd.read_csv(url, sep=';')

print("🔍 Sample Data:")
display(df.head())

print("\n📊 Class Balance (Target 'y'):")
print(df['y'].value_counts())

le = LabelEncoder()
for column in df.columns:
    if df[column].dtype == 'object':
        df[column] = le.fit_transform(df[column])

X = df.drop('y', axis=1)
y = df['y']

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

clf = DecisionTreeClassifier(max_depth=5, random_state=42)
clf.fit(X_train, y_train)

y_pred = clf.predict(X_test)

print("\n✅ Accuracy Score:", accuracy_score(y_test, y_pred))
print("\n📄 Classification Report:\n", classification_report(y_test, y_pred))
print("\n🔁 Confusion Matrix:\n", confusion_matrix(y_test, y_pred))

plt.figure(figsize=(20, 10))
plot_tree(clf, feature_names=X.columns, class_names=['No', 'Yes'], filled=True, fontsize=10)
plt.title("Decision Tree for Predicting Purchase")
plt.show()